head(pa.list)
head(outputs)
options(download.file.method="libcurl")
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
st <- read.csv("C:/Users/jnicola/Desktop/isd-history.csv")
dim(st)
#st <- st[, -c(1:2,6:8)]
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("OH"),]
#st$LAT <- st$LAT/1000
#st$LON <- st$LON/1000
#st$ELEV <- st$ELEV/10
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("OH") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
outputs <- as.data.frame(matrix(NA, dim(pa.list)[1],2))
names(outputs) <- c("FILE", "STATUS")
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- try(system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
file <- "ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv"
options(download.file.method="libcurl")
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
st <- read.csv("C:/Users/jnicola/Desktop/isd-history.csv")
dim(st)
#st <- st[, -c(1:2,6:8)]
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("OH"),]
#st$LAT <- st$LAT/1000
#st$LON <- st$LON/1000
#st$ELEV <- st$ELEV/10
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("OH") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
outputs <- as.data.frame(matrix(NA, dim(pa.list)[1],2))
names(outputs) <- c("FILE", "STATUS")
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- try(system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
names(outputs) <- c("FILE", "STATUS")
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- try(system(wget, intern = TRUE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, sep="")
args(system)
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- (system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- system(wget, intern = FALSE, ignore.stderr = TRUE)
}
}
head(pa.list)
head(outputs)
View(outputs)
file <- "ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv"
file <- "ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv"
options(download.file.method="libcurl")
repeat {
try(download.file(file, "C:/Users/jnicola/Desktop/R/isd-history.csv",
quiet = TRUE))
if (file.info("C:/Users/jnicola/Desktop/R/isd-history.csv")$size >
0) {
break
}
}
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
dim(st)
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("OH"),]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("OH") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
outputs <- as.data.frame(matrix(NA, dim(pa.list)[1],2))
names(outputs) <- c("FILE", "STATUS")
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- try(system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
wget <- paste("wget -P /Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
outputs[s, 2] <- try(system(wget, intern = FALSE, ignore.stderr = TRUE))
}
}
head(pa.list)
head(outputs)
source("C:/Users/jnicola/Desktop/R/WxRisk_forecast_pull.R")
source("C:/Users/jnicola/Desktop/R/WxPlots.R")
source("C:/Users/jnicola/Desktop/R/WxCharts_Email.R")
source('C:/Users/jnicola/Desktop/R/inretail_fcast_vs_actual.R', echo=TRUE)
paste("wget -P C:/Users/jnicola/Desktop/R ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s, 1], sep = "")
wget
system(wget, intern = FALSE, ignore.stderr = TRUE)
system2(wget, intern = FALSE, ignore.stderr = TRUE)
system2(wget)
download.file('ftp://ftp.ncdc.noaa.gov/pub/data/noaa/2016/994340-99999-2016.gz',
"C:/Users/jnicola/Desktop/R/test.gz")
library(httr)
r<-GET('ftp://ftp.ncdc.noaa.gov/pub/data/noaa/2016/994340-99999-2016.gz')
r<-GET('ftp://ftp.ncdc.noaa.gov/pub/data/noaa/2016/994340-99999-2016.gz',timeout(10))
r<-GET('ftp://ftp.ncdc.noaa.gov/pub/data/noaa/2016/994340-99999-2016.gz',timeout(100))
t<-readLines('ftp://ftp.ncdc.noaa.gov/pub/data/noaa/2016/994340-99999-2016.gz')
args(untar)
untar("C:/Users/jnicola/Downloads/200001.tar.gz")
g <- untar("C:/Users/jnicola/Downloads/200001.tar.gz")
r <- gzfile('C:/Users/jnicola/Downloads/200001.tar.gz')
gz(r)
unz(r)
install.packages("R.utils")
library(R.utils)
gunzip(r)
r <- ('C:/Users/jnicola/Downloads/200001.tar.gz')
r
r <- C:/Users/jnicola/Downloads/200001.tar.gz
r <- 'C:/Users/jnicola/Downloads/200001.tar.gz'
gunzip(r)
t <- gunzip(r)
r <- 'C:/Users/jnicola/Downloads/010010-99999-2015'
t <- gzip(r)
r <- 'C:/Users/jnicola/Downloads/010010-99999-2015.gz'
t <- gzip(r)
t
readLines('C:/Users/jnicola/Downloads/010010-99999-2015.gz')
readLines("C:/Users/jnicola/Downloads/010010-99999-2015.gz")
system("gunzip -r C:/Users/jnicola/Downloads/010010-99999-2015.gz", intern = FALSE, ignore.stderr = TRUE)
read.table("C:/Users/jnicola/Downloads/010010-99999-2015.gz")
read.table("C:/Users/jnicola/Downloads/010010-99999-2015.gz.gz")
pa.list <- st[st$STATE %in% c("MD", "PA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
pa.list <- st[st$STATE %in% c("VA", "PA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
View(pa.list)
library(rgdal)
library(spdep)
library(sp)
library(fields)
library(MBA)
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
dim(st)
pa.list <- st[st$STATE %in% c("VA", "PA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
pa.list <- st[st$STATE %in% c("PA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
file <- "ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv"
options(download.file.method="libcurl")
download.file(file, "C:/Users/jnicola/Desktop/isd-history.csv",quiet = TRUE)
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("OH"),]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("PA", "VA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
View(st)
st <- st[st$CTRY == "US",]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("PA", "VA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
pa.list <- st[st$STATE %in% c("PA","VA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
st <- st[st$STATE %in% c("PA,VA"),]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("PA", "VA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("PA,VA"),]
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
dim(st)
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("PA,VA"),]
st <- st[st$CTRY == "US",]
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
dim(st)
#st <- st[, -c(1:2,6:8)]
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("PA","VA"),]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$STATE %in% c("PA", "VA") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
st <- read.csv("C:/Users/jnicola/Desktop/R/isd-history.csv")
pa.list <- st[st$WBAN %in% c("93738", "14736") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
st <- st[st$CTRY == "US",]
st <- st[st$STATE %in% c("PA","VA"),]
st$BEGIN <- as.numeric(substr(st$BEGIN, 1, 4))
st$END <- as.numeric(substr(st$END, 1, 4))
pa.list <- st[st$WBAN %in% c("93738", "14736") & (st$BEGIN <= 2000 & st$END >= 2016 & !is.na(st$BEGIN)), ]
dim(pa.list)
outputs <- as.data.frame(matrix(NA, dim(pa.list)[1],2))
names(outputs) <- c("FILE", "STATUS")
for (y in 2000:2016) {
y.pa.list <- pa.list[pa.list$BEGIN <= y & pa.list$END >= y, ]
for (s in 1:dim(y.pa.list)[1]) {
outputs[s, 1] <- paste(sprintf("%06d", y.pa.list[s,
1]), "-", sprintf("%05d", y.pa.list[s,
2]), "-", y, ".gz", sep = "")
try(download.file(paste("ftp://ftp.ncdc.noaa.gov/pub/data/noaa/", y, "/", outputs[s,1], sep = ""),
paste("C:/Users/jnicola/Desktop/R/Hrly_Wx/", outputs[s,1], sep = ""), method = "libcurl"))
}
}
setwd("~/")
getwd
getwd()
setwd("~/GitHub/Open_Projects/Past_Hrly_Wx/Data/Altoona")
getwd()
ls
t <- setwd("~/GitHub/Open_Projects/Past_Hrly_Wx/Data/Altoona")
list.files(t)
library(R.utils)
d <- gzfile("725126-14736-2000.gz", "rt")
d <- gzfile("725126-14736-2000.csv.gz", "rt")
d <- gunzip("725126-14736-2000.gz")
readLines("725126-14736-2000.gz")
gzip("725126-14736-2000.gz")
readLines("725126-14736-2006.gz")
install.packages("tweenr")
library(ggplot2)
library(gganimate)
library(ggforce)
library(tweenr)
t <- data.frame(x=0, y=0, colour = 'forestgreen', size=1, alpha = 1,
stringsAsFactors = FALSE)
t <- t[rep(1, 12),]
t$alpha[2:12] <- 0
t2 <- t
t2$y <- 1
t2$colour <- 'firebrick'
t3 <- t2
t3$x <- 1
t3$colour <- 'steelblue'
t4 <- t3
t4$y <- 0
t4$colour <- 'goldenrod'
t5 <- t4
c <- ggforce::radial_trans(c(1,1), c(1, 12))$transform(rep(1, 12), 1:12)
t5$x <- (c$x + 1) / 2
t5$y <- (c$y + 1) / 2
t5$alpha <- 1
t5$size <- 0.5
t6 <- t5
t6 <- rbind(t5[12,], t5[1:11, ])
t6$colour <- 'firebrick'
t7 <- rbind(t6[12,], t6[1:11, ])
t7$colour <- 'steelblue'
t8 <- t7
t8$x <- 0.5
t8$y <- 0.5
t8$size <- 2
t9 <- t
ts <- list(t, t2, t3, t4, t5, t6, t7, t8, t9)
tweenlogo <- data.frame(x=0.5, y=0.5, label = 'tweenr', stringsAsFactors = F)
tweenlogo <- tweenlogo[rep(1, 60),]
tweenlogo$.frame <- 316:375
# Using tweenr
tf <- tween_states(ts, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out',
'cubic-out', 'sine-in-out', 'sine-in-out',
'circular-in', 'back-out'),
nframes = 375)
# Animate with gganimate
p <- ggplot(data=tf, aes(x=x, y=y)) +
geom_text(aes(label = label, frame = .frame), data=tweenlogo, size = 13) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
scale_colour_identity() +
scale_alpha(range = c(0, 1), guide = 'none') +
scale_size(range = c(4, 60), guide = 'none') +
expand_limits(x=c(-0.36, 1.36), y=c(-0.36, 1.36)) +
theme_bw()
animation::ani.options(interval = 1/15)
gg_animate(p, "dancing ball.gif", title_frame = F, ani.width = 400,
ani.height = 400)
devtools::install_github("dgrtwo/gganimate")
devtools::install_github('thomasp85/ggforce')
library(ggplot2)
library(gganimate)
library(ggforce)
library(tweenr)
t <- data.frame(x=0, y=0, colour = 'forestgreen', size=1, alpha = 1,
stringsAsFactors = FALSE)
t <- t[rep(1, 12),]
t$alpha[2:12] <- 0
t2 <- t
t2$y <- 1
t2$colour <- 'firebrick'
t3 <- t2
t3$x <- 1
t3$colour <- 'steelblue'
t4 <- t3
t4$y <- 0
t4$colour <- 'goldenrod'
t5 <- t4
c <- ggforce::radial_trans(c(1,1), c(1, 12))$transform(rep(1, 12), 1:12)
t5$x <- (c$x + 1) / 2
t5$y <- (c$y + 1) / 2
t5$alpha <- 1
t5$size <- 0.5
t6 <- t5
t6 <- rbind(t5[12,], t5[1:11, ])
t6$colour <- 'firebrick'
t7 <- rbind(t6[12,], t6[1:11, ])
t7$colour <- 'steelblue'
t8 <- t7
t8$x <- 0.5
t8$y <- 0.5
t8$size <- 2
t9 <- t
ts <- list(t, t2, t3, t4, t5, t6, t7, t8, t9)
tweenlogo <- data.frame(x=0.5, y=0.5, label = 'tweenr', stringsAsFactors = F)
tweenlogo <- tweenlogo[rep(1, 60),]
tweenlogo$.frame <- 316:375
# Using tweenr
tf <- tween_states(ts, tweenlength = 2, statelength = 1,
ease = c('cubic-in-out', 'elastic-out', 'bounce-out',
'cubic-out', 'sine-in-out', 'sine-in-out',
'circular-in', 'back-out'),
nframes = 375)
# Animate with gganimate
p <- ggplot(data=tf, aes(x=x, y=y)) +
geom_text(aes(label = label, frame = .frame), data=tweenlogo, size = 13) +
geom_point(aes(frame = .frame, size=size, alpha = alpha, colour = colour)) +
scale_colour_identity() +
scale_alpha(range = c(0, 1), guide = 'none') +
scale_size(range = c(4, 60), guide = 'none') +
expand_limits(x=c(-0.36, 1.36), y=c(-0.36, 1.36)) +
theme_bw()
animation::ani.options(interval = 1/15)
gg_animate(p, "dancing ball.gif", title_frame = F, ani.width = 400,
ani.height = 400)
View(t)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
ggforce::theme_no_axes()
animation::ani.options(interval = 1/24)
gg_animate(p, 'dropping balls.gif', title_frame = F)
install.packages('tweenr')
install.packages("tweenr")
install.packages('gganimate')
library(ggplot2)
library(gganimate)
library(ggforce)
library(tweenr)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
ggforce::theme_no_axes()
animation::ani.options(interval = 1/24)
gg_animate(p, 'dropping balls.gif', title_frame = F)
install.packages('ggforce')
install.packages("ggforce")
library(ggplot2)
library(gganimate)
library(ggforce)
library(tweenr)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
# Using tweenr
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
# Animate with gganimate
p <- ggplot(data = dt) +
geom_point(aes(x=x, y=y, size=size, alpha=alpha, frame = .frame)) +
scale_size(range = c(0.1, 20), guide = 'none') +
scale_alpha(range = c(0, 1), guide = 'none') +
ggforce::theme_no_axes()
animation::ani.options(interval = 1/24)
gg_animate(p, 'dropping balls.gif', title_frame = F)
gg_animate(p, 'C:/Users/jnicola/Desktop/dropping balls.gif', title_frame = F)
